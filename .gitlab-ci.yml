include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/test/check-merge-compatibility.yml"

Lint MD links:
  image:
    name: registry.hpc.ut.ee/mirror/norberttech/md-link-linter:0.0.11
    entrypoint: [""]
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "*.md"
        - docs/**/*
  script:
    - /composer/vendor/bin/mdlinklint . -vv
  before_script: []

Lint MD files:
  image: registry.gitlab.com/pipeline-components/markdownlint:0.11.0
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "*.md"
        - docs/**/*
  script:
    - echo "all" >> markdownlint-style.rb
    - echo "exclude_rule 'MD013'" >> markdownlint-style.rb
    - echo "exclude_rule 'MD033'" >> markdownlint-style.rb
    - echo "exclude_rule 'MD041'" >> markdownlint-style.rb
    - echo "exclude_rule 'MD046'" >> markdownlint-style.rb
    - echo "rule 'MD024', :allow_different_nesting => true" >> markdownlint-style.rb
    - echo "rule 'MD029', :style => :ordered" >> markdownlint-style.rb
    - mdl --style markdownlint-style.rb .
  before_script: []

Test mkdocs:
  image: registry.hpc.ut.ee/mirror/library/python:3.8-buster
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install -r requirements.txt
    - mkdocs build --strict --verbose --site-dir test

Build pages:
  image: registry.hpc.ut.ee/mirror/library/python:3.8-buster
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    # Ignore if `github_*` remote already exists
    - git remote add github_waldur git@github.com:waldur/waldur-docs.git || true
    - git remote -v
    - pip install -r requirements.txt
    - cd $CI_PROJECT_DIR
    - export ENABLE_PDF_EXPORT=1
    - mkdocs gh-deploy --force -r github_waldur
  before_script:
    - echo "[+] Adding ssh keys to the home directory"
    - mkdir -p ~/.ssh
    - cat $SSH_JENKINS_GITHUB_PRIVATE_KEY | tr -d '\r' > ~/.ssh/id_rsa
    - cat $SSH_JENKINS_GITHUB_PUBLIC_KEY | tr -d '\r' > ~/.ssh/id_rsa.pub
    - chmod 600 ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa.pub
    - ssh-keygen -lf ~/.ssh/id_rsa.pub
    - ssh-keyscan -H "github.com" >> ~/.ssh/known_hosts

Tag Mastermind and Homeport repositories:
  image:
    name: registry.hpc.ut.ee/mirror/alpine/git:2.36.3
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
  script:
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-mastermind.git"
    - cd waldur-mastermind/
    - git tag -a "v$CI_COMMIT_TAG" -m "Mastermind $CI_COMMIT_TAG"
    - git push origin $CI_COMMIT_TAG
    - cd ../
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-homeport.git"
    - cd waldur-homeport/
    - git tag -a "v$CI_COMMIT_TAG" -m "Homeport $CI_COMMIT_TAG"
    - git push origin $CI_COMMIT_TAG
