include:
  - project: "waldur/waldur-pipelines"
    file: "/templates/stages.yml"
  - project: "waldur/waldur-pipelines"
    file: "/templates/test/check-merge-compatibility.yml"

Lint MD files:
  image: registry.hpc.ut.ee/mirror/library/node:lts-alpine
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "*.md"
        - docs/**/*
  before_script:
    - npm install
  script:
    - node lint-markdown.mjs

Test mkdocs:
  image: registry.hpc.ut.ee/mirror/library/python:3.12
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  script:
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
    - mkdocs build --strict --verbose --site-dir test

Build pages:
  image: registry.hpc.ut.ee/mirror/library/python:3.12
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
  script:
    # Ignore if `github_*` remote already exists
    - git remote add github_waldur git@github.com:waldur/waldur-docs.git || true
    - git remote -v
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
    - cd $CI_PROJECT_DIR
    - export ENABLE_PDF_EXPORT=1
    - git status
    - git pull github_waldur gh-pages
    - git branch -a
    - mike deploy --title "latest" --update-aliases latest -r github_waldur --push
  before_script:
    - echo "[+] Adding ssh keys to the home directory"
    - mkdir -p ~/.ssh
    - cat $SSH_JENKINS_GITHUB_PRIVATE_KEY | tr -d '\r' > ~/.ssh/id_rsa
    - cat $SSH_JENKINS_GITHUB_PUBLIC_KEY | tr -d '\r' > ~/.ssh/id_rsa.pub
    - chmod 600 ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa.pub
    - ssh-keygen -lf ~/.ssh/id_rsa.pub
    - ssh-keyscan -H "github.com" >> ~/.ssh/known_hosts

Test Docker Compose deployment before tagging:
  stage: test
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
  trigger:
    waldur/waldur-docker-compose

Test Helm deployment before tagging:
  stage: test
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
  trigger:
    waldur/waldur-helm

Test changelog generation:
  image:
    name: registry.hpc.ut.ee/mirror/bitnami/git:2.39.1
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  variables:
    CI_COMMIT_TAG_MESSAGE: "Tag message"
    CI_RELEASE_DESCRIPTION: "Release description"
    CI_COMMIT_TAG: "v10.0.0"
  script:
    - export VERSION=${CI_COMMIT_TAG}
    - echo $CI_COMMIT_TAG_MESSAGE
    - echo $CI_RELEASE_DESCRIPTION
    - export TIMESTAMP=$(date)
    - PREV_TAG=$(cat docs/about/CHANGELOG.md| grep "##" | head -n 1 | sed "s/## //" )
    - echo $PREV_TAG
    - sed -i -E -e "s/# Changelog//" docs/about/CHANGELOG.md
    - |
      echo -e "# Changelog

      ## $VERSION

      Notes: ${CI_RELEASE_DESCRIPTION:-None}

      * Waldur Mastermind: [tag diff](https://github.com/waldur/waldur-mastermind/compare/$PREV_TAG...$CI_COMMIT_TAG)
      * Waldur Homeport: [tag diff](https://github.com/waldur/waldur-homeport/compare/$PREV_TAG...$CI_COMMIT_TAG)
      * Waldur Helm: [tag diff](https://github.com/waldur/waldur-helm/compare/$PREV_TAG...$CI_COMMIT_TAG)
      * Waldur Docker Compose: [tag diff](https://github.com/waldur/waldur-docker-compose/compare/$PREV_TAG...$CI_COMMIT_TAG)

      Date: $TIMESTAMP\n" | cat - docs/about/CHANGELOG.md > tmp
    - cat tmp
    - mv -f tmp docs/about/CHANGELOG.md

Tag Mastermind, Homeport and Helm repositories:
  image:
    name: registry.hpc.ut.ee/mirror/bitnami/git:2.39.1
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^\d+\.\d+\.\d+$/'
  before_script:
    - echo "[+] Adding ssh keys to the home directory"
    - mkdir -p ~/.ssh
    - cat $SSH_JENKINS_GITHUB_PRIVATE_KEY | tr -d '\r' > ~/.ssh/id_rsa
    - cat $SSH_JENKINS_GITHUB_PUBLIC_KEY | tr -d '\r' > ~/.ssh/id_rsa.pub
    - chmod 600 ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa.pub
    - ssh-keygen -lf ~/.ssh/id_rsa.pub
    - ssh-keyscan -H "github.com" >> ~/.ssh/known_hosts
    - git config --global user.name "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git remote set-url origin "https://gitlab-ci-token:${GITLAB_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"
    - git remote -v
    - git fetch origin master
    - git checkout master
    - git pull
    - export VERSION=${CI_COMMIT_TAG}
    - echo $CI_COMMIT_TAG_MESSAGE
    - echo $CI_RELEASE_DESCRIPTION
    - export TIMESTAMP=$(date)
    - PREV_TAG=$(cat docs/about/CHANGELOG.md| grep "##" | head -n 1 | sed "s/## //" )
    - echo $PREV_TAG
    # Drop first 2 lines from the changelog
    - sed -i '1,2d' docs/about/CHANGELOG.md
    - |
      echo -e "# Changelog

      ## $VERSION

      Notes: ${CI_COMMIT_TAG_MESSAGE:-None}

      * Waldur Mastermind: [tag diff](https://github.com/waldur/waldur-mastermind/compare/$PREV_TAG...$CI_COMMIT_TAG)
      * Waldur Homeport: [tag diff](https://github.com/waldur/waldur-homeport/compare/$PREV_TAG...$CI_COMMIT_TAG)
      * Waldur Helm: [tag diff](https://github.com/waldur/waldur-helm/compare/$PREV_TAG...$CI_COMMIT_TAG)
      * Waldur Docker Compose: [tag diff](https://github.com/waldur/waldur-docker-compose/compare/$PREV_TAG...$CI_COMMIT_TAG)
      * Waldur Prometheus Exporter: [tag diff](https://github.com/waldur/waldur-prometheus-exporter/compare/$PREV_TAG...$CI_COMMIT_TAG)

      Date: $TIMESTAMP\n" | cat - docs/about/CHANGELOG.md > tmp
    - cat tmp
    - mv -f tmp docs/about/CHANGELOG.md
    - git --no-pager diff
    - git add docs/about/CHANGELOG.md
    - git commit -m "Update changelog for $CI_COMMIT_TAG"
    - git --no-pager show
    - git push origin master
  script:
    - git remote add github_waldur git@github.com:waldur/waldur-docs.git || true
    - git remote -v
    - pip install poetry
    - poetry config virtualenvs.create false
    - poetry install
    - cd $CI_PROJECT_DIR
    - export ENABLE_PDF_EXPORT=1
    - mike deploy $CI_COMMIT_TAG -r github_waldur --push
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-mastermind.git"
    - cd waldur-mastermind/
    - git tag -a $CI_COMMIT_TAG -m "$CI_COMMIT_TAG_MESSAGE"
    - git push origin $CI_COMMIT_TAG
    - cd ../
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-homeport.git"
    - cd waldur-homeport/
    - git tag -a $CI_COMMIT_TAG -m "$CI_COMMIT_TAG_MESSAGE"
    - git push origin $CI_COMMIT_TAG
    - cd ../
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-helm.git"
    - cd waldur-helm/
    # Add new tag to Chart.yaml and values.yaml
    - |
      sed -i -E -e "s/^version: ('.*'|.*)$/version: $CI_COMMIT_TAG/" waldur/Chart.yaml
    - |
      sed -i -E -e "s/^appVersion: ('.*'|.*)$/appVersion: \"$CI_COMMIT_TAG\"/" waldur/Chart.yaml
    - |
      sed -i -E -e "s/^  imageTag: ('.*'|.*)$/  imageTag: \"$CI_COMMIT_TAG\"/" waldur/values.yaml
    - git status
    - git diff
    - git add waldur/Chart.yaml waldur/values.yaml
    - git commit -m "Set target version to ${CI_COMMIT_TAG}"
    - git push -o "ci.skip"
    - git tag -a $CI_COMMIT_TAG -m "$CI_COMMIT_TAG_MESSAGE"
    - git push origin $CI_COMMIT_TAG
    - cd ../
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-docker-compose.git"
    - cd waldur-docker-compose/
    # Add new tag to .env.example
    - |
      sed -i -E -e "s/^WALDUR_MASTERMIND_IMAGE_TAG=('.*'|.*)$/WALDUR_MASTERMIND_IMAGE_TAG=$CI_COMMIT_TAG/" .env.example
    - |
      sed -i -E -e "s/^WALDUR_HOMEPORT_IMAGE_TAG=('.*'|.*)$/WALDUR_HOMEPORT_IMAGE_TAG=$CI_COMMIT_TAG/" .env.example
    - git status
    - git diff
    - git add .env.example
    - git commit -m "Set target version to ${CI_COMMIT_TAG}"
    - git push -o "ci.skip"
    - git tag -a $CI_COMMIT_TAG -m "$CI_COMMIT_TAG_MESSAGE"
    - git push origin $CI_COMMIT_TAG
    - git clone "https://gitlab-ci-token:$GITLAB_TOKEN@$CI_SERVER_HOST/waldur/waldur-prometheus-exporter.git"
    - cd waldur-prometheus-exporter/
    - git tag -a $CI_COMMIT_TAG -m "$CI_COMMIT_TAG_MESSAGE"
    - git push origin $CI_COMMIT_TAG
